"use strict";(self.webpackChunkdatastrato_next=self.webpackChunkdatastrato_next||[]).push([[7978],{58264:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var a=t(97458),s=t(37627);const r={title:"Gravitino connector - Iceberg catalog",slug:"/trino-connector/catalog-iceberg",keyword:"gravitino connector trino",license:"Copyright 2023 Datastrato Pvt Ltd. This software is licensed under the Apache License version 2."},i=void 0,c={id:"trino-connector/catalog-iceberg",title:"Gravitino connector - Iceberg catalog",description:"Apache Iceberg is an open table format for huge analytic datasets.",source:"@site/versioned_docs/version-0.3.0/trino-connector/catalog-iceberg.md",sourceDirName:"trino-connector",slug:"/trino-connector/catalog-iceberg",permalink:"/docs/0.3.0/trino-connector/catalog-iceberg",draft:!1,unlisted:!1,editUrl:"https://github.com/datastrato/datastrato.com/edit/master/docs/trino-connector/catalog-iceberg.md",tags:[],version:"0.3.0",frontMatter:{title:"Gravitino connector - Iceberg catalog",slug:"/trino-connector/catalog-iceberg",keyword:"gravitino connector trino",license:"Copyright 2023 Datastrato Pvt Ltd. This software is licensed under the Apache License version 2."},sidebar:"tutorialSidebar",previous:{title:"Gravitino connector - Hive catalog",permalink:"/docs/0.3.0/trino-connector/catalog-hive"},next:{title:"Gravitino connector - MySQL catalog",permalink:"/docs/0.3.0/trino-connector/catalog-mysql"}},l={},o=[{value:"Requirements",id:"requirements",level:2},{value:"Create table",id:"create-table",level:2},{value:"Alter table",id:"alter-table",level:2},{value:"Select",id:"select",level:2},{value:"Table and Schema properties",id:"table-and-schema-properties",level:2},{value:"Basic usage examples",id:"basic-usage-examples",level:2},{value:"Creating tables and schemas",id:"creating-tables-and-schemas",level:3},{value:"Writing data",id:"writing-data",level:3},{value:"Querying data",id:"querying-data",level:3},{value:"Modify a table",id:"modify-a-table",level:3},{value:"Drop",id:"drop",level:3},{value:"HDFS username and permissions",id:"hdfs-username-and-permissions",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Apache Iceberg is an open table format for huge analytic datasets.\nThe Iceberg catalog allows Trino querying data stored in files written in Iceberg format,\nas defined in the Iceberg Table Spec. The catalog supports Apache Iceberg table spec versions 1 and 2."}),"\n",(0,a.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,a.jsx)(n.p,{children:"To use Iceberg, you need:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Network access from the Trino coordinator and workers to the distributed object storage."}),"\n",(0,a.jsx)(n.li,{children:"Access to a Hive metastore service (HMS), an AWS Glue catalog, a JDBC catalog, a REST catalog, or a Nessie server."}),"\n",(0,a.jsxs)(n.li,{children:["Data files stored in a supported file format. These can be configured using file format configuration properties per catalog:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"ORC"}),"\n",(0,a.jsx)(n.li,{children:"Parquet (default)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"create-table",children:"Create table"}),"\n",(0,a.jsx)(n.p,{children:"The Gravitino connector currently supports basic Iceberg table creation statements, such as defining fields,\nallowing null values, and adding comments.\nHowever, it does not support advanced features like partitioning, sorting, and distribution."}),"\n",(0,a.jsxs)(n.p,{children:["The Gravitino connector does not support ",(0,a.jsx)(n.code,{children:"CREATE TABLE AS SELECT"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"alter-table",children:"Alter table"}),"\n",(0,a.jsx)(n.p,{children:"Support for the following alter table operations:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Rename table"}),"\n",(0,a.jsx)(n.li,{children:"Add a column"}),"\n",(0,a.jsx)(n.li,{children:"Drop a column"}),"\n",(0,a.jsx)(n.li,{children:"Rename a column"}),"\n",(0,a.jsx)(n.li,{children:"Change a column type"}),"\n",(0,a.jsx)(n.li,{children:"Set a table property"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"select",children:"Select"}),"\n",(0,a.jsx)(n.p,{children:"The Gravitino connector supports most SELECT statements, allowing the execution of queries successfully.\nCurrently, it doesn't support certain query optimizations, such as pushdown and pruning functionalities."}),"\n",(0,a.jsx)(n.h2,{id:"table-and-schema-properties",children:"Table and Schema properties"}),"\n",(0,a.jsx)(n.p,{children:"Iceberg's tables and schemas do not support properties."}),"\n",(0,a.jsx)(n.h2,{id:"basic-usage-examples",children:"Basic usage examples"}),"\n",(0,a.jsx)(n.p,{children:"You need to do the following steps before you can use the Iceberg catalog in Trino through Gravitino."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Create a metalake and catalog in Gravitino. Assuming that the metalake name is ",(0,a.jsx)(n.code,{children:"test"})," and the catalog name is ",(0,a.jsx)(n.code,{children:"iceberg_test"}),",\nthen you can use the following code to create them in Gravitino:"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST -H "Content-Type: application/json" \\\n-d \'{\n  "name": "test",\n  "comment": "comment",\n  "properties": {}\n}\' http://gravitino-host:8090/api/metalakes\n\ncurl -X POST -H "Content-Type: application/json" \\\n-d \'{\n  "name": "iceberg_test",\n  "type": "RELATIONAL",\n  "comment": "comment",\n  "provider": "lakehouse-iceberg",\n  "properties": {\n    "uri": "thrift://hive-host:9083",\n    "catalog-backend": "hive",\n    "warehouse": "hdfs://hdfs-host:9000/user/iceberg/warehouse"\n  }\n}\' http://gravitino-host:8090/api/metalakes/test/catalogs\n'})}),"\n",(0,a.jsxs)(n.p,{children:["For More information about the Iceberg catalog, please refer to ",(0,a.jsx)(n.a,{href:"/docs/0.3.0/lakehouse-iceberg-catalog",children:"Iceberg catalog"}),"."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Set the value of configuration ",(0,a.jsx)(n.code,{children:"gravitino.metalake"})," to the metalake you have created, named 'test', and start the Trino container."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Use the Trino CLI to connect to the Trino container and run a query."}),"\n",(0,a.jsx)(n.p,{children:"Listing all Gravitino managed catalogs:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SHOW CATALOGS;\n"})}),"\n",(0,a.jsx)(n.p,{children:"The results are similar to:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"    Catalog\n----------------\n gravitino\n jmx\n system\n test.iceberg_test\n(4 rows)\n\nQuery 20231017_082503_00018_6nt3n, FINISHED, 1 node\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"gravitino"})," catalog is a catalog defined By Trino catalog configuration.\nThe ",(0,a.jsx)(n.code,{children:"test.iceberg_test"})," catalog is the catalog created by you in Gravitino.\nOther catalogs are regular user-configured Trino catalogs."]}),"\n",(0,a.jsx)(n.h3,{id:"creating-tables-and-schemas",children:"Creating tables and schemas"}),"\n",(0,a.jsxs)(n.p,{children:["Create a new schema named ",(0,a.jsx)(n.code,{children:"database_01"})," in ",(0,a.jsx)(n.code,{children:"test.iceberg_test"})," catalog."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'CREATE SCHEMA "test.iceberg_test".database_01;\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Create a new table named ",(0,a.jsx)(n.code,{children:"table_01"})," in schema ",(0,a.jsx)(n.code,{children:'"test.iceberg_test".database_01'}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE  "test.iceberg_test".database_01.table_01\n(\nname varchar,\nsalary int\n);\n'})}),"\n",(0,a.jsx)(n.h3,{id:"writing-data",children:"Writing data"}),"\n",(0,a.jsxs)(n.p,{children:["Insert data into the table ",(0,a.jsx)(n.code,{children:"table_01"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"INSERT INTO \"test.iceberg_test\".database_01.table_01 (name, salary) VALUES ('ice', 12);\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Insert data into the table ",(0,a.jsx)(n.code,{children:"table_01"})," from select:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'INSERT INTO "test.iceberg_test".database_01.table_01 (name, salary) SELECT * FROM "test.iceberg_test".database_01.table_01;\n'})}),"\n",(0,a.jsx)(n.h3,{id:"querying-data",children:"Querying data"}),"\n",(0,a.jsxs)(n.p,{children:["Query the ",(0,a.jsx)(n.code,{children:"table_01"})," table:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "test.iceberg_test".database_01.table_01;\n'})}),"\n",(0,a.jsx)(n.h3,{id:"modify-a-table",children:"Modify a table"}),"\n",(0,a.jsxs)(n.p,{children:["Add a new column ",(0,a.jsx)(n.code,{children:"age"})," to the ",(0,a.jsx)(n.code,{children:"table_01"})," table:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'ALTER TABLE "test.iceberg_test".database_01.table_01 ADD COLUMN age int;\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Drop a column ",(0,a.jsx)(n.code,{children:"age"})," from the ",(0,a.jsx)(n.code,{children:"table_01"})," table:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'ALTER TABLE "test.iceberg_test".database_01.table_01 DROP COLUMN age;\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Rename the ",(0,a.jsx)(n.code,{children:"table_01"})," table to ",(0,a.jsx)(n.code,{children:"table_02"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'ALTER TABLE "test.iceberg_test".database_01.table_01 RENAME TO "test.iceberg_test".database_01.table_02;\n'})}),"\n",(0,a.jsx)(n.h3,{id:"drop",children:"Drop"}),"\n",(0,a.jsx)(n.p,{children:"Drop a schema:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'DROP SCHEMA "test.iceberg_test".database_01;\n'})}),"\n",(0,a.jsx)(n.p,{children:"Drop a table:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'DROP TABLE "test.iceberg_test".database_01.table_01;\n'})}),"\n",(0,a.jsx)(n.h2,{id:"hdfs-username-and-permissions",children:"HDFS username and permissions"}),"\n",(0,a.jsxs)(n.p,{children:["Before running any ",(0,a.jsx)(n.code,{children:"Insert"})," statements for Iceberg tables in Trino,\nyou must check that the user Trino is using to access HDFS has access to the warehouse directory.\nYou can override this username by setting the HADOOP_USER_NAME system property in the Trino JVM config,\nreplacing hdfs_user with the appropriate username:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"-DHADOOP_USER_NAME=hdfs_user\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},37627:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>i});var a=t(52983);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);