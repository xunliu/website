"use strict";(self.webpackChunkdatastrato_next=self.webpackChunkdatastrato_next||[]).push([[1597],{67004:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=s(97458),o=s(37627);const r={index_title:"Object Storage",title:"What Is Object Storage?",wrapperClassName:"career"},n="What Is Object Storage?",i={type:"mdx",permalink:"/glossary/object-storage",source:"@site/src/pages/glossary/object-storage.md",title:"What Is Object Storage?",description:"Object storage is a data storage system designed to manage large volumes of",frontMatter:{index_title:"Object Storage",title:"What Is Object Storage?",wrapperClassName:"career"},unlisted:!1},l={},c=[{value:"File vs. block vs. object storage",id:"file-vs-block-vs-object-storage",level:2},{value:"File storage",id:"file-storage",level:3},{value:"Block storage",id:"block-storage",level:3},{value:"Object storage",id:"object-storage",level:3},{value:"Examples of object storage",id:"examples-of-object-storage",level:2}];function d(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"what-is-object-storage",children:"What Is Object Storage?"}),"\n",(0,a.jsx)(t.p,{children:"Object storage is a data storage system designed to manage large volumes of\nunstructured data. It stores and organizes data into discrete units called\nobjects. Each object is characterized by three main components:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Data"}),": actual contents of the object"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Metadata"}),": information about the object such as name, created/uploaded\ndate, and file type"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Unique identifier"}),": usually a unique key generated by some hashing\nalgorithm to identify and retrieve each object"]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Since object storage does not impose many restrictions on the type of objects it\ncan store, it is often used to store unstructured data that does not fit well\ninto other types of storage including pictures, audio, and other digital\ncontent. Coupled with cloud technology, object storage makes up the backbone of\nscalable, durable, highly-available, and cost-efficient storage options."}),"\n",(0,a.jsx)(t.h2,{id:"file-vs-block-vs-object-storage",children:"File vs. block vs. object storage"}),"\n",(0,a.jsx)(t.p,{children:"Traditionally unstructured data was stored in a file or block storage. These\ntypes of storage systems are still used but for different purposes:"}),"\n",(0,a.jsx)(t.h3,{id:"file-storage",children:"File storage"}),"\n",(0,a.jsx)(t.p,{children:"File storage systems like Amazon EFS and Google Filestore store data into a\nhierarchical structure involving folders. Files are placed into folders that can\nbe stored at top-level or nested under other folders. To retrieve a specific\nfile, the path to that file must be known. Multiple devices (e.g., VMs, servers)\ncan access file storage concurrently. Compared to object storage systems, file\nstorage systems are less scalable, but can be a good option if a hierarchical\nstructure is already in place or if support for POSIX operations (e.g., updates,\nrandom reads) or standard file systems are required."}),"\n",(0,a.jsx)(t.h3,{id:"block-storage",children:"Block storage"}),"\n",(0,a.jsx)(t.p,{children:"From a user's perspective, block storage systems look and behave like a locally\nmounted disk drive. However, behind the scenes, block storage systems break files\ninto discrete chunks called blocks and store them separately. Each chunk of data\nis assigned a unique identifier, which is used to retrieve and assemble into the\nfull file when needed. Block storage is best suited for transactional workloads\nor use cases that require consistent performance or lowest latency as block\nstorage is treated as a local disk . In general, block storage is often cheaper\nthan file storage systems, but has lower availability as only a single device\ncan attach to it. There are some cloud offerings that allow multiple devices to\nattach, but they are limited to read-only operations."}),"\n",(0,a.jsx)(t.h3,{id:"object-storage",children:"Object storage"}),"\n",(0,a.jsx)(t.p,{children:"Object storage systems store self-contained objects into flat data structures,\neven though a hierarchical structure can be supported. Object storage is best\nsuited for workloads with relatively static data. Examples include static assets\n(e.g., HTML, pictures, videos) that are not modified frequently, but read many\ntimes. Object storage is massively scalable as its flat architecture allows for\nhorizontal scaling through adding more storage nodes. The biggest advantage of\nobject storage is that it is significantly cheaper than other options,\nespecially when less frequently accessed data can be archived or moved to\ndifferent tiers of storage."}),"\n",(0,a.jsx)(t.h2,{id:"examples-of-object-storage",children:"Examples of object storage"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://aws.amazon.com/s3/",children:"Amazon S3"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://cloud.google.com/storage/",children:"Google Cloud Storage"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blobs-introduction",children:"Azure Blob Storage"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},37627:(e,t,s)=>{s.d(t,{Z:()=>i,a:()=>n});var a=s(52983);const o={},r=a.createContext(o);function n(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:n(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);